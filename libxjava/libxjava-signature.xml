<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<signature>
  <class modifiers="public abstract" name="com.github.libxjava.concurrent.AbstractSingleThreadRunner">
    <constructor modifiers="protected">
      <parameter type="java.lang.String"/>
    </constructor>
    <method modifiers="public final" name="getName" return="java.lang.String"/>
    <method modifiers="public final" name="start" return="boolean"/>
    <method modifiers="public final" name="stop" return="boolean"/>
    <method modifiers="public final" name="isInState" return="boolean">
      <parameter type="byte"/>
    </method>
    <method modifiers="public final" name="waitForState" return="boolean">
      <exception name="java.lang.InterruptedException"/>
      <parameter type="int"/>
      <parameter type="byte"/>
    </method>
    <method modifiers="protected abstract" name="doRun" return="void"/>
    <method modifiers="protected" name="forkExecution" return="void">
      <parameter type="java.lang.Runnable"/>
      <parameter type="java.lang.String"/>
    </method>
    <method modifiers="protected" name="unblock" return="void"/>
    <method modifiers="protected final" name="isCancelled" return="boolean"/>
    <field constant-value="1" modifiers="public static final" name="STARTED" type="byte"/>
    <field constant-value="2" modifiers="public static final" name="STOPPED" type="byte"/>
  </class>
  <class modifiers="public final" name="com.github.libxjava.concurrent.ReentrantLock">
    <constructor modifiers="public"/>
    <method modifiers="public" name="lock" return="void"/>
    <method modifiers="public" name="lockInterruptibly" return="void">
      <exception name="java.lang.InterruptedException"/>
    </method>
    <method modifiers="public" name="tryLock" return="boolean"/>
    <method modifiers="public" name="unlock" return="void">
      <exception name="java.lang.IllegalMonitorStateException"/>
    </method>
    <method modifiers="public" name="isOwner" return="boolean"/>
    <method modifiers="public" name="getCount" return="int"/>
  </class>
  <class modifiers="public final" name="com.github.libxjava.concurrent.Semaphore">
    <constructor modifiers="public">
      <parameter type="int"/>
    </constructor>
    <method modifiers="public" name="acquire" return="void"/>
    <method modifiers="public" name="acquire" return="void">
      <parameter type="int"/>
    </method>
    <method modifiers="public" name="acquireInterruptibly" return="void">
      <exception name="java.lang.InterruptedException"/>
    </method>
    <method modifiers="public" name="acquireInterruptibly" return="void">
      <exception name="java.lang.InterruptedException"/>
      <exception name="java.lang.IllegalArgumentException"/>
      <parameter type="int"/>
    </method>
    <method modifiers="public" name="release" return="void"/>
    <method modifiers="public" name="release" return="void">
      <parameter type="int"/>
    </method>
    <method modifiers="public" name="tryAcquire" return="boolean"/>
    <method modifiers="public" name="tryAcquire" return="boolean">
      <parameter type="int"/>
    </method>
    <method modifiers="public" name="getPermits" return="int"/>
  </class>
  <class extends="com.github.libxjava.io.BaseX" modifiers="public" name="com.github.libxjava.io.Base64">
    <constructor modifiers="public"/>
    <method modifiers="protected" name="internalDecode" return="void">
      <exception name="java.io.IOException"/>
      <parameter type="java.io.InputStream"/>
      <parameter type="java.io.OutputStream"/>
    </method>
    <method modifiers="protected" name="internalEncode" return="void">
      <exception name="java.io.IOException"/>
      <parameter type="java.io.InputStream"/>
      <parameter type="java.io.OutputStream"/>
    </method>
  </class>
  <class extends="com.github.libxjava.io.BaseX" modifiers="public" name="com.github.libxjava.io.Base85">
    <constructor modifiers="public"/>
    <method modifiers="protected" name="internalDecode" return="void">
      <exception name="java.io.IOException"/>
      <parameter type="java.io.InputStream"/>
      <parameter type="java.io.OutputStream"/>
    </method>
    <method modifiers="protected" name="internalEncode" return="void">
      <exception name="java.io.IOException"/>
      <parameter type="java.io.InputStream"/>
      <parameter type="java.io.OutputStream"/>
    </method>
  </class>
  <class extends="com.github.libxjava.io.BaseX" modifiers="public" name="com.github.libxjava.io.Base91">
    <constructor modifiers="public"/>
    <method modifiers="protected" name="internalDecode" return="void">
      <exception name="java.io.IOException"/>
      <parameter type="java.io.InputStream"/>
      <parameter type="java.io.OutputStream"/>
    </method>
    <method modifiers="protected" name="internalEncode" return="void">
      <exception name="java.io.IOException"/>
      <parameter type="java.io.InputStream"/>
      <parameter type="java.io.OutputStream"/>
    </method>
  </class>
  <class modifiers="public abstract" name="com.github.libxjava.io.BaseX">
    <constructor modifiers="protected"/>
    <method modifiers="public final" name="encode" return="byte[]">
      <parameter type="byte[]"/>
    </method>
    <method modifiers="public final" name="encode" return="byte[]">
      <parameter type="byte[]"/>
      <parameter type="int"/>
      <parameter type="int"/>
    </method>
    <method modifiers="public final" name="encode" return="void">
      <exception name="java.io.IOException"/>
      <parameter type="byte[]"/>
      <parameter type="int"/>
      <parameter type="int"/>
      <parameter type="java.io.OutputStream"/>
    </method>
    <method modifiers="public final" name="encode" return="void">
      <exception name="java.io.IOException"/>
      <parameter type="java.io.InputStream"/>
      <parameter type="java.io.OutputStream"/>
    </method>
    <method modifiers="public final" name="decode" return="byte[]">
      <parameter type="byte[]"/>
    </method>
    <method modifiers="public final" name="decode" return="byte[]">
      <parameter type="byte[]"/>
      <parameter type="int"/>
      <parameter type="int"/>
    </method>
    <method modifiers="public final" name="decode" return="void">
      <exception name="java.io.IOException"/>
      <parameter type="java.io.InputStream"/>
      <parameter type="java.io.OutputStream"/>
    </method>
    <method modifiers="protected abstract" name="internalDecode" return="void">
      <exception name="java.io.IOException"/>
      <parameter type="java.io.InputStream"/>
      <parameter type="java.io.OutputStream"/>
    </method>
    <method modifiers="protected abstract" name="internalEncode" return="void">
      <exception name="java.io.IOException"/>
      <parameter type="java.io.InputStream"/>
      <parameter type="java.io.OutputStream"/>
    </method>
  </class>
  <class extends="java.io.DataInputStream" modifiers="public final" name="com.github.libxjava.io.BinaryDeserialiserStream">
    <implements>
      <interface name="com.github.libxjava.io.IDeserialiser"/>
    </implements>
    <constructor modifiers="public">
      <parameter type="com.github.libxjava.lang.IClassLoader"/>
      <parameter type="java.io.InputStream"/>
    </constructor>
    <method modifiers="public" name="flush" return="void"/>
    <method modifiers="public" name="readObject" return="java.lang.Object">
      <exception name="java.lang.ClassNotFoundException"/>
      <exception name="java.io.IOException"/>
    </method>
  </class>
  <class extends="java.io.DataOutputStream" modifiers="public final" name="com.github.libxjava.io.BinarySerialiserStream">
    <implements>
      <interface name="com.github.libxjava.io.ISerialiser"/>
    </implements>
    <constructor modifiers="public">
      <parameter type="java.io.OutputStream"/>
    </constructor>
    <method modifiers="public" name="flush" return="void">
      <exception name="java.io.IOException"/>
    </method>
    <method modifiers="public" name="writeObject" return="void">
      <exception name="java.io.IOException"/>
      <parameter type="java.lang.Object"/>
    </method>
  </class>
  <class extends="java.io.InputStream" modifiers="public abstract" name="com.github.libxjava.io.BufferedInputStream">
    <constructor modifiers="protected">
      <parameter type="int"/>
    </constructor>
    <method modifiers="public final" name="available" return="int"/>
    <method modifiers="public final" name="clear" return="void"/>
    <method modifiers="public final" name="read" return="int">
      <exception name="java.io.IOException"/>
    </method>
    <method modifiers="public final" name="read" return="int">
      <exception name="java.io.IOException"/>
      <parameter type="byte[]"/>
      <parameter type="int"/>
      <parameter type="int"/>
    </method>
    <method modifiers="protected" name="getPayloadStart" return="int"/>
    <method modifiers="protected" name="getPayloadEnd" return="int"/>
    <method modifiers="protected abstract" name="internalRead" return="int">
      <exception name="java.io.IOException"/>
      <parameter type="byte[]"/>
    </method>
    <field modifiers="protected final" name="bufsize" type="int"/>
    <field modifiers="protected final" name="worklock" type="java.lang.Object"/>
  </class>
  <class extends="java.io.OutputStream" modifiers="public abstract" name="com.github.libxjava.io.BufferedOutputStream">
    <constructor modifiers="protected">
      <parameter type="int"/>
    </constructor>
    <method modifiers="public" name="close" return="void">
      <exception name="java.io.IOException"/>
    </method>
    <method modifiers="public final" name="clear" return="void"/>
    <method modifiers="public final" name="flush" return="void">
      <exception name="java.io.IOException"/>
    </method>
    <method modifiers="public final" name="write" return="void">
      <exception name="java.io.IOException"/>
      <parameter type="byte[]"/>
      <parameter type="int"/>
      <parameter type="int"/>
    </method>
    <method modifiers="public final" name="write" return="void">
      <exception name="java.io.IOException"/>
      <parameter type="int"/>
    </method>
    <method modifiers="protected" name="getPayloadStart" return="int"/>
    <method modifiers="protected" name="getPayloadEnd" return="int"/>
    <method modifiers="protected abstract" name="internalWrite" return="void">
      <exception name="java.io.IOException"/>
      <parameter type="byte[]"/>
      <parameter type="int"/>
      <parameter type="boolean"/>
    </method>
    <field modifiers="protected final" name="bufsize" type="int"/>
    <field modifiers="protected final" name="worklock" type="java.lang.Object"/>
  </class>
  <class modifiers="public final" name="com.github.libxjava.io.ByteArrayBuffer">
    <constructor modifiers="public">
      <parameter type="int"/>
    </constructor>
    <constructor modifiers="public">
      <parameter type="int"/>
      <parameter type="long"/>
      <parameter type="long"/>
    </constructor>
    <method modifiers="public" name="capacity" return="int"/>
    <method modifiers="public" name="getReader" return="com.github.libxjava.io.ByteArrayBuffer$Reader"/>
    <method modifiers="public" name="getWriter" return="com.github.libxjava.io.ByteArrayBuffer$Writer"/>
    <method modifiers="protected" name="internalWrite" return="void">
      <exception name="java.io.IOException"/>
      <parameter type="byte[]"/>
      <parameter type="int"/>
      <parameter type="int"/>
    </method>
    <method modifiers="protected" name="internalCloseWriter" return="void"/>
    <method modifiers="protected" name="internalMarkComplete" return="void"/>
    <method modifiers="protected" name="internalMarkIncomplete" return="void"/>
    <method modifiers="protected" name="internalRead" return="int">
      <exception name="java.io.IOException"/>
      <parameter type="byte[]"/>
      <parameter type="int"/>
      <parameter type="int"/>
    </method>
    <method modifiers="protected" name="internalAvailable" return="int"/>
    <method modifiers="protected" name="internalMark" return="void">
      <parameter type="int"/>
    </method>
    <method modifiers="protected" name="internalReset" return="void">
      <exception name="java.io.IOException"/>
    </method>
    <method modifiers="protected" name="internalSpace" return="int"/>
  </class>
  <class extends="java.io.InputStream" modifiers="public final" name="com.github.libxjava.io.ByteArrayBuffer$Reader">
    <constructor modifiers="public">
      <parameter type="com.github.libxjava.io.ByteArrayBuffer"/>
    </constructor>
    <method modifiers="public" name="available" return="int"/>
    <method modifiers="public" name="mark" return="void">
      <parameter type="int"/>
    </method>
    <method modifiers="public" name="markSupported" return="boolean"/>
    <method modifiers="public" name="reset" return="void">
      <exception name="java.io.IOException"/>
    </method>
    <method modifiers="public" name="read" return="int">
      <exception name="java.io.IOException"/>
    </method>
    <method modifiers="public" name="read" return="int">
      <exception name="java.io.IOException"/>
      <parameter type="byte[]"/>
      <parameter type="int"/>
      <parameter type="int"/>
    </method>
    <method modifiers="public" name="read" return="int">
      <exception name="java.io.IOException"/>
      <parameter type="byte[]"/>
    </method>
  </class>
  <class extends="java.io.OutputStream" modifiers="public final" name="com.github.libxjava.io.ByteArrayBuffer$Writer">
    <constructor modifiers="public">
      <parameter type="com.github.libxjava.io.ByteArrayBuffer"/>
    </constructor>
    <method modifiers="public" name="space" return="int"/>
    <method modifiers="public" name="close" return="void"/>
    <method modifiers="public" name="flush" return="void"/>
    <method modifiers="public" name="write" return="void">
      <exception name="java.io.IOException"/>
      <parameter type="byte[]"/>
      <parameter type="int"/>
      <parameter type="int"/>
    </method>
    <method modifiers="public" name="write" return="void">
      <exception name="java.io.IOException"/>
      <parameter type="byte[]"/>
    </method>
    <method modifiers="public" name="write" return="void">
      <exception name="java.io.IOException"/>
      <parameter type="int"/>
    </method>
    <method modifiers="public" name="markComplete" return="void"/>
    <method modifiers="public" name="markIncomplete" return="void"/>
  </class>
  <class extends="java.io.InputStream" modifiers="public final" name="com.github.libxjava.io.ByteArrayInputBuffer">
    <constructor modifiers="public"/>
    <constructor modifiers="public">
      <parameter type="byte[]"/>
    </constructor>
    <method modifiers="public" name="available" return="int"/>
    <method modifiers="public" name="close" return="void"/>
    <method modifiers="public" name="getByteArrayReference" return="byte[]"/>
    <method modifiers="public" name="mark" return="void">
      <parameter type="int"/>
    </method>
    <method modifiers="public" name="markSupported" return="boolean"/>
    <method modifiers="public" name="read" return="int"/>
    <method modifiers="public" name="read" return="int">
      <parameter type="byte[]"/>
      <parameter type="int"/>
      <parameter type="int"/>
    </method>
    <method modifiers="public" name="reset" return="void"/>
    <method modifiers="public" name="setInput" return="void">
      <parameter type="byte[]"/>
    </method>
    <method modifiers="public" name="setInput" return="void">
      <parameter type="byte[]"/>
      <parameter type="int"/>
      <parameter type="int"/>
    </method>
    <method modifiers="public" name="skip" return="long">
      <parameter type="long"/>
    </method>
  </class>
  <class extends="java.io.OutputStream" modifiers="public final" name="com.github.libxjava.io.ByteArrayOutputBuffer">
    <constructor modifiers="public"/>
    <constructor modifiers="public">
      <parameter type="int"/>
    </constructor>
    <method modifiers="public" name="getByteArrayReference" return="byte[]"/>
    <method modifiers="public" name="toByteArray" return="byte[]"/>
    <method modifiers="public" name="reset" return="void"/>
    <method modifiers="public" name="resetNew" return="void"/>
    <method modifiers="public" name="resetNew" return="void">
      <parameter type="int"/>
    </method>
    <method modifiers="public" name="setOutput" return="void">
      <parameter type="byte[]"/>
      <parameter type="int"/>
    </method>
    <method modifiers="public" name="size" return="int"/>
    <method modifiers="public" name="close" return="void"/>
    <method modifiers="public" name="write" return="void">
      <parameter type="byte[]"/>
      <parameter type="int"/>
      <parameter type="int"/>
    </method>
    <method modifiers="public" name="write" return="void">
      <parameter type="int"/>
    </method>
  </class>
  <interface modifiers="public" name="com.github.libxjava.io.IDeserialiser">
    <implements>
      <interface name="java.io.DataInput"/>
    </implements>
    <method modifiers="public abstract" name="flush" return="void"/>
    <method modifiers="public abstract" name="readObject" return="java.lang.Object">
      <exception name="java.lang.ClassNotFoundException"/>
      <exception name="java.io.IOException"/>
    </method>
  </interface>
  <interface modifiers="public" name="com.github.libxjava.io.ISerialisable">
    <method modifiers="public abstract" name="serialise" return="void">
      <exception name="java.io.IOException"/>
      <parameter type="com.github.libxjava.io.ISerialiser"/>
    </method>
    <method modifiers="public abstract" name="deserialise" return="void">
      <exception name="java.io.IOException"/>
      <exception name="java.lang.ClassNotFoundException"/>
      <parameter type="com.github.libxjava.io.IDeserialiser"/>
    </method>
  </interface>
  <interface modifiers="public" name="com.github.libxjava.io.ISerialiser">
    <implements>
      <interface name="java.io.DataOutput"/>
    </implements>
    <method modifiers="public abstract" name="flush" return="void">
      <exception name="java.io.IOException"/>
    </method>
    <method modifiers="public abstract" name="writeObject" return="void">
      <exception name="java.io.IOException"/>
      <parameter type="java.lang.Object"/>
    </method>
  </interface>
  <class extends="java.io.InputStream" modifiers="public final" name="com.github.libxjava.io.InputStreamProxy">
    <constructor modifiers="public"/>
    <method modifiers="public" name="available" return="int">
      <exception name="java.io.IOException"/>
    </method>
    <method modifiers="public" name="close" return="void">
      <exception name="java.io.IOException"/>
    </method>
    <method modifiers="public" name="mark" return="void">
      <parameter type="int"/>
    </method>
    <method modifiers="public" name="markSupported" return="boolean"/>
    <method modifiers="public" name="read" return="int">
      <exception name="java.io.IOException"/>
    </method>
    <method modifiers="public" name="read" return="int">
      <exception name="java.io.IOException"/>
      <parameter type="byte[]"/>
      <parameter type="int"/>
      <parameter type="int"/>
    </method>
    <method modifiers="public" name="read" return="int">
      <exception name="java.io.IOException"/>
      <parameter type="byte[]"/>
    </method>
    <method modifiers="public" name="reset" return="void">
      <exception name="java.io.IOException"/>
    </method>
    <method modifiers="public" name="skip" return="long">
      <exception name="java.io.IOException"/>
      <parameter type="long"/>
    </method>
    <field modifiers="public" name="concreteStream" type="java.io.InputStream"/>
  </class>
  <class extends="java.io.IOException" modifiers="public" name="com.github.libxjava.io.NestedIOException">
    <constructor modifiers="public"/>
    <constructor modifiers="public">
      <parameter type="java.lang.String"/>
    </constructor>
    <constructor modifiers="public">
      <parameter type="java.lang.String"/>
      <parameter type="java.lang.Throwable"/>
    </constructor>
    <method modifiers="public" name="getCause" return="java.lang.Throwable"/>
    <method modifiers="public" name="printStackTrace" return="void"/>
  </class>
  <class extends="java.io.OutputStream" modifiers="public final" name="com.github.libxjava.io.OutputStreamProxy">
    <constructor modifiers="public"/>
    <method modifiers="public" name="close" return="void">
      <exception name="java.io.IOException"/>
    </method>
    <method modifiers="public" name="flush" return="void">
      <exception name="java.io.IOException"/>
    </method>
    <method modifiers="public" name="write" return="void">
      <exception name="java.io.IOException"/>
      <parameter type="byte[]"/>
      <parameter type="int"/>
      <parameter type="int"/>
    </method>
    <method modifiers="public" name="write" return="void">
      <exception name="java.io.IOException"/>
      <parameter type="byte[]"/>
    </method>
    <method modifiers="public" name="write" return="void">
      <exception name="java.io.IOException"/>
      <parameter type="int"/>
    </method>
    <field modifiers="public" name="concreteStream" type="java.io.OutputStream"/>
  </class>
  <interface modifiers="public" name="com.github.libxjava.lang.IClassLoader">
    <method modifiers="public abstract" name="loadClass" return="java.lang.Class">
      <exception name="java.lang.ClassNotFoundException"/>
      <parameter type="java.lang.String"/>
    </method>
    <method modifiers="public abstract" name="getResourceAsStream" return="java.io.InputStream">
      <parameter type="java.lang.String"/>
    </method>
  </interface>
  <class modifiers="public" name="com.github.libxjava.lang.SimpleClassLoader">
    <implements>
      <interface name="com.github.libxjava.lang.IClassLoader"/>
    </implements>
    <constructor modifiers="public"/>
    <method modifiers="public" name="getResourceAsStream" return="java.io.InputStream">
      <parameter type="java.lang.String"/>
    </method>
    <method modifiers="public" name="loadClass" return="java.lang.Class">
      <exception name="java.lang.ClassNotFoundException"/>
      <parameter type="java.lang.String"/>
    </method>
  </class>
  <class modifiers="public" name="com.github.libxjava.util.BasicArrayList">
    <constructor modifiers="public"/>
    <constructor modifiers="public">
      <parameter type="int"/>
    </constructor>
    <method modifiers="public" name="add" return="boolean">
      <parameter type="java.lang.Object"/>
    </method>
    <method modifiers="public" name="add" return="void">
      <parameter type="int"/>
      <parameter type="java.lang.Object"/>
    </method>
    <method modifiers="public" name="clear" return="void"/>
    <method modifiers="public" name="contains" return="boolean">
      <parameter type="java.lang.Object"/>
    </method>
    <method modifiers="public" name="ensureCapacity" return="void">
      <parameter type="int"/>
    </method>
    <method modifiers="public" name="enumeration" return="com.github.libxjava.util.BasicEnumeration"/>
    <method modifiers="public" name="get" return="java.lang.Object">
      <parameter type="int"/>
    </method>
    <method modifiers="public" name="indexOf" return="int">
      <parameter type="java.lang.Object"/>
    </method>
    <method modifiers="public" name="isEmpty" return="boolean"/>
    <method modifiers="public" name="lastIndexOf" return="int">
      <parameter type="java.lang.Object"/>
    </method>
    <method modifiers="public" name="trimToSize" return="void"/>
    <method modifiers="public" name="remove" return="boolean">
      <parameter type="java.lang.Object"/>
    </method>
    <method modifiers="public" name="remove" return="java.lang.Object">
      <parameter type="int"/>
    </method>
    <method modifiers="public" name="set" return="java.lang.Object">
      <parameter type="int"/>
      <parameter type="java.lang.Object"/>
    </method>
    <method modifiers="public" name="size" return="int"/>
    <method modifiers="public" name="toString" return="java.lang.String"/>
  </class>
  <interface modifiers="public" name="com.github.libxjava.util.BasicEnumeration">
    <implements>
      <interface name="java.util.Enumeration"/>
    </implements>
    <method modifiers="public abstract" name="hasMoreElements" return="boolean"/>
    <method modifiers="public abstract" name="nextElement" return="java.lang.Object"/>
    <method modifiers="public abstract" name="remove" return="void"/>
  </interface>
  <class modifiers="public" name="com.github.libxjava.util.BasicHashMap">
    <constructor modifiers="public"/>
    <constructor modifiers="public">
      <parameter type="int"/>
    </constructor>
    <method modifiers="public" name="clear" return="void"/>
    <method modifiers="public" name="containsKey" return="boolean">
      <parameter type="java.lang.Object"/>
    </method>
    <method modifiers="public" name="containsValue" return="boolean">
      <parameter type="java.lang.Object"/>
    </method>
    <method modifiers="public" name="elements" return="com.github.libxjava.util.BasicEnumeration"/>
    <method modifiers="public" name="get" return="java.lang.Object">
      <parameter type="java.lang.Object"/>
    </method>
    <method modifiers="public" name="isEmpty" return="boolean"/>
    <method modifiers="public" name="keys" return="com.github.libxjava.util.BasicEnumeration"/>
    <method modifiers="public" name="put" return="java.lang.Object">
      <parameter type="java.lang.Object"/>
      <parameter type="java.lang.Object"/>
    </method>
    <method modifiers="public" name="remove" return="java.lang.Object">
      <parameter type="java.lang.Object"/>
    </method>
    <method modifiers="public" name="size" return="int"/>
    <method modifiers="public" name="toString" return="java.lang.String"/>
  </class>
  <class modifiers="public" name="com.github.libxjava.util.BasicHashSet">
    <constructor modifiers="public"/>
    <constructor modifiers="public">
      <parameter type="int"/>
    </constructor>
    <method modifiers="public" name="add" return="boolean">
      <parameter type="java.lang.Object"/>
    </method>
    <method modifiers="public" name="clear" return="void"/>
    <method modifiers="public" name="contains" return="boolean">
      <parameter type="java.lang.Object"/>
    </method>
    <method modifiers="public" name="enumeration" return="com.github.libxjava.util.BasicEnumeration"/>
    <method modifiers="public" name="isEmpty" return="boolean"/>
    <method modifiers="public" name="remove" return="boolean">
      <parameter type="java.lang.Object"/>
    </method>
    <method modifiers="public" name="size" return="int"/>
    <method modifiers="public" name="toString" return="java.lang.String"/>
  </class>
  <class modifiers="public" name="com.github.libxjava.util.FixedSizeQueue">
    <constructor modifiers="public">
      <parameter type="int"/>
    </constructor>
    <method modifiers="public" name="put" return="java.lang.Object">
      <parameter type="java.lang.Object"/>
    </method>
    <method modifiers="public" name="get" return="java.lang.Object"/>
    <method modifiers="public" name="get" return="java.lang.Object">
      <parameter type="long"/>
    </method>
  </class>
  <class modifiers="public" name="com.github.libxjava.util.HashRingSet">
    <constructor modifiers="public">
      <parameter type="int"/>
    </constructor>
    <method modifiers="public" name="add" return="boolean">
      <parameter type="java.lang.Object"/>
    </method>
    <method modifiers="public" name="contains" return="boolean">
      <parameter type="java.lang.Object"/>
    </method>
    <method modifiers="public" name="toString" return="java.lang.String"/>
  </class>
  <class modifiers="public" name="com.github.libxjava.util.IntHashMap">
    <constructor modifiers="public"/>
    <constructor modifiers="public">
      <parameter type="int"/>
    </constructor>
    <method modifiers="public" name="clear" return="void"/>
    <method modifiers="public" name="containsKey" return="boolean">
      <parameter type="int"/>
    </method>
    <method modifiers="public" name="containsValue" return="boolean">
      <parameter type="java.lang.Object"/>
    </method>
    <method modifiers="public" name="elements" return="java.lang.Object[]"/>
    <method modifiers="public" name="get" return="java.lang.Object">
      <parameter type="int"/>
    </method>
    <method modifiers="public" name="isEmpty" return="boolean"/>
    <method modifiers="public" name="keys" return="int[]"/>
    <method modifiers="public" name="put" return="java.lang.Object">
      <parameter type="int"/>
      <parameter type="java.lang.Object"/>
    </method>
    <method modifiers="public" name="remove" return="java.lang.Object">
      <parameter type="int"/>
    </method>
    <method modifiers="public" name="size" return="int"/>
  </class>
  <class modifiers="public final" name="com.github.libxjava.util.PropertyUtil">
    <constructor modifiers="public"/>
    <method modifiers="public static" name="load" return="java.util.Hashtable">
      <exception name="java.io.IOException"/>
      <parameter type="java.io.InputStream"/>
    </method>
    <method modifiers="public static" name="loadInto" return="void">
      <exception name="java.io.IOException"/>
      <parameter type="java.util.Hashtable"/>
      <parameter type="java.io.InputStream"/>
    </method>
  </class>
  <class extends="com.github.libxjava.util.BasicArrayList" modifiers="public" name="com.github.libxjava.util.SerialisableArrayList">
    <implements>
      <interface name="com.github.libxjava.io.ISerialisable"/>
    </implements>
    <constructor modifiers="public"/>
    <constructor modifiers="public">
      <parameter type="int"/>
    </constructor>
    <method modifiers="public" name="deserialise" return="void">
      <exception name="java.io.IOException"/>
      <exception name="java.lang.ClassNotFoundException"/>
      <parameter type="com.github.libxjava.io.IDeserialiser"/>
    </method>
    <method modifiers="public" name="serialise" return="void">
      <exception name="java.io.IOException"/>
      <parameter type="com.github.libxjava.io.ISerialiser"/>
    </method>
  </class>
  <class extends="com.github.libxjava.util.BasicHashMap" modifiers="public" name="com.github.libxjava.util.SerialisableHashMap">
    <implements>
      <interface name="com.github.libxjava.io.ISerialisable"/>
    </implements>
    <constructor modifiers="public"/>
    <constructor modifiers="public">
      <parameter type="int"/>
    </constructor>
    <method modifiers="public" name="deserialise" return="void">
      <exception name="java.io.IOException"/>
      <exception name="java.lang.ClassNotFoundException"/>
      <parameter type="com.github.libxjava.io.IDeserialiser"/>
    </method>
    <method modifiers="public" name="serialise" return="void">
      <exception name="java.io.IOException"/>
      <parameter type="com.github.libxjava.io.ISerialiser"/>
    </method>
  </class>
  <class extends="com.github.libxjava.util.BasicHashSet" modifiers="public" name="com.github.libxjava.util.SerialisableHashSet">
    <implements>
      <interface name="com.github.libxjava.io.ISerialisable"/>
    </implements>
    <constructor modifiers="public"/>
    <constructor modifiers="public">
      <parameter type="int"/>
    </constructor>
    <method modifiers="public" name="deserialise" return="void">
      <exception name="java.io.IOException"/>
      <exception name="java.lang.ClassNotFoundException"/>
      <parameter type="com.github.libxjava.io.IDeserialiser"/>
    </method>
    <method modifiers="public" name="serialise" return="void">
      <exception name="java.io.IOException"/>
      <parameter type="com.github.libxjava.io.ISerialiser"/>
    </method>
  </class>
  <class extends="java.util.Hashtable" modifiers="public" name="com.github.libxjava.util.SerialisableHashtable">
    <implements>
      <interface name="com.github.libxjava.io.ISerialisable"/>
    </implements>
    <constructor modifiers="public"/>
    <constructor modifiers="public">
      <parameter type="int"/>
    </constructor>
    <method modifiers="public" name="deserialise" return="void">
      <exception name="java.io.IOException"/>
      <exception name="java.lang.ClassNotFoundException"/>
      <parameter type="com.github.libxjava.io.IDeserialiser"/>
    </method>
    <method modifiers="public" name="serialise" return="void">
      <exception name="java.io.IOException"/>
      <parameter type="com.github.libxjava.io.ISerialiser"/>
    </method>
  </class>
  <class extends="java.util.Vector" modifiers="public" name="com.github.libxjava.util.SerialisableVector">
    <implements>
      <interface name="com.github.libxjava.io.ISerialisable"/>
    </implements>
    <constructor modifiers="public"/>
    <constructor modifiers="public">
      <parameter type="int"/>
    </constructor>
    <constructor modifiers="public">
      <parameter type="int"/>
      <parameter type="int"/>
    </constructor>
    <method modifiers="public" name="deserialise" return="void">
      <exception name="java.io.IOException"/>
      <exception name="java.lang.ClassNotFoundException"/>
      <parameter type="com.github.libxjava.io.IDeserialiser"/>
    </method>
    <method modifiers="public" name="serialise" return="void">
      <exception name="java.io.IOException"/>
      <parameter type="com.github.libxjava.io.ISerialiser"/>
    </method>
  </class>
</signature>
